GIT Homework 1

JSON
 4. Создать внешний репозиторий c названием JSON.
- Create new repository web
- push "new"
- enter name repository "JSON"
- push "create repository"

 5. Клонировать репозиторий JSON на локальный компьютер.
- git clone https://github.com/Taras057/JSON.git

 6. Внутри локального JSON создать файл “new.json”.
- touch new.json

 7. Добавить файл под гит.
- git add new.json

 8. Закоммитить файл.
- git commit -m "add new file"

 9. Отправить файл на внешний GitHub репозиторий.
- git push

 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
- vim new.json
"name": "Taras",
 "lastName": "Nichiporuk",
 "age": 33,
 "a_pet": "two cat",
 "salary": 100000 ,

 11. Отправить изменения на внешний репозиторий.
- git commit -a -m "add info fo me"
- git push

 12. Создать файл preferences.json
- touch preferences.json

 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
- vim preferences.json
{
"favorite_movie":"Harry_Potter",
"favorite_serial":"dr_House",
"favorite_food":"fast_food",
"favorite_season":"summer",
"country":"England"
}

 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
- touch skills.json
  vim skills.json
{
"skills_1":"json",
"skiils_2":"xml",
"skills_3":"http",
"skills_4":"mobile_testing",
"skills_5":"dev_tools",
"skills_6":"Postman"
}

 15. Отправить сразу 2 файла на внешний репозиторий.
- git commit -a -m "add preference and skills"
- git push

 16. На веб интерфейсе создать файл bug_report.json.
- push "add file"
- push "create new file"
- enter "name file"
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
- push "commit new file"

 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
- select a file "bug_report.json"
- push "edit this file"
- enter
{
"summary":"type error",
"Project":"Name_project",
"Version":"Version_error",
"Severity":"Major",
"priority":"Medium",
"Status":"status_bug",
"Author":"Author_bug",
"Assignet_to":"Name_emploee",
"environment":"os, browser",
"Steps_to_reproduce":"steps",
"Result":"Result",
"Expected_result":"correct result expected",
"Attachment":"file_to_logs,screenshot"  
}

 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
- push "commit changes"

 20. Синхронизировать внешний и локальный репозиторий JSON
- git pull

XML
 21. Создать внешний репозиторий c названием XML.
- Create new repository web
- push "new"
- enter name repository "XML"
- push "create repository"
 
 22. Клонировать репозиторий XML на локальный компьютер.
- git clone https://github.com/Taras057/XML.git

 23. Внутри локального XML создать файл “new.xml”.
- touch new.xml

 24. Добавить файл под гит.
- git add new.xml

 25. Закоммитить файл.
- git commit -m "add new xml file"

 26. Отправить файл на внешний GitHub репозиторий.
- git push

 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
- vim new.xml
- <xml>
        <First_name>"Taras"</First_name>
        <Last_name>"Nichiporuk"</Last_name>
        <age>"32"</age>
        <amount_pets>"two_cats"</amount_pets>
        <salary>"100000"</salary>
</xml>

 28. Отправить изменения на внешний репозиторий.
- git commit -am "add info to me xml"
- git push

 29. Создать файл preferences.xml
- touch preferences.xml

 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
- vim preferences.xml
<xml>
        <First_name>"Taras"</First_name>
        <Last_name>"Nichiporuk"</Last_name>
        <age>"32"</age>
        <amount_pets>"two_cats"</amount_pets>
        <salary>"100000"</salary>

 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
- touch skills.xml
- vim skills.xml
-<xml>
        <skills_1>"json"</skills_1>
        <skills_2>"xml"</skills_2>
        <skills_3>"http"</skills_3>
        <skills_4>"mobile_testing"</skills_4>
        <skills_5>"dev_tools"</skills_5>
        <skills_6>"Postman"</skills_6>
</xml>

 32. Сделать коммит в одну строку.
- git commit -am "add skills for me xml"

 33. Отправить сразу 2 файла на внешний репозиторий.
- git push

 34. На веб интерфейсе создать файл bug_report.xml.
- push "add file"
- push "create new file"
- enter "name file"

 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
- push "commit new file"

 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
- select a file "bug_report.json"
- push "edit this file"
- enter
<xml>
        <summary>"type_error"</summary>
        <Project>"Name_project"</Project>
        <Version>"Version_error"</Version>
        <Severity>"Major"</Severity>
        <priority>"Medium"</priority>
        <Status>"status_bug"</Status>
        <Author>"Author_bug"</Author>
        <Assignet_to>"Name_emploee"</Assignet_to>
        <environment>"os,browser"</environment>
        <Steps_to_reproduce>"steps"</Steps_to_reproduce>
        <Result>"result"</Result>
        <Expected_result>"correct_result_expected"</Expected_result>
        <Attachment>"file_to_logs,screenshot"</Attachment>

</xml>

 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
- push "commit changes"

 38. Синхронизировать внешний и локальный репозиторий XML
- git pull

TXT
 1. Создать внешний репозиторий c названием TXT.
- Create new repository web
- push "new"
- enter name repository "JSON"
- push "create repository"

 2. Клонировать репозиторий TXT на локальный компьютер.
- git clone https://github.com/Taras057/TXT

 3. Внутри локального TXT создать файл “new.txt”.
- touch new.txt

 4. Добавить файл под гит.
- git add new.txt

 5. Закоммитить файл.
- git commit -m "add new.txt"

 6. Отправить файл на внешний GitHub репозиторий.
- git push

 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
- vim new.txt
1) Ничипорук Тарас
2) Возраст 32 года
3) 2 кошки
4) 100000 рублей

 8. Отправить изменения на внешний репозиторий.
- git commit -a -m "add new info for me"

 9. Создать файл preferences.txt
- touch preferences.txt

 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
-cat >preferences.txt
1) Harry Potter
2) dr. House
3) fastfood
4) summer
5) England

 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
- touch skills.txt
- vim skills.txt
Skills_1 - "json"
Skills_2 - "xml"
Skills_3 - "http"
Skills_4 - "mobile_testing"
Skills_5 - "dev_tools"
Skills_6 - "Postman"

 12. Сделать коммит в одну строку.
- git commit -a -m "add skills fo me"

 13. Отправить сразу 2 файла на внешний репозиторий.
- git push

 14. На веб интерфейсе создать файл bug_report.txt.
- push "add file"
- push "create new file"
- enter "name file bug_report.txt"

 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
-  push "commit new file"

 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате 
TXT.
- select a file "bug_report.txt"
- push "edit this file"
- enter
summary : type error
Project : Name_project
Version : Version_error
Severity : Major
priority : Medium
Status : status_bug
Author : Author_bug
Assignet_to : Name_emploee
environment : os, browser
Steps_to_reproduce : steps
Result : Result
Expected_result : correct result expected
Attachment : file_to_logs,screenshot

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
- push "commit changes"

 18. Синхронизировать внешний и локальный репозиторий TXT
- git pull